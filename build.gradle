buildscript {
    dependencies {
        classpath "org.owasp:dependency-check-gradle:6.1.1"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.27.0'
    }
}

plugins {
    id 'java'
    id 'maven-publish'
    id "com.github.johnrengelman.shadow" version "7.1.2"
}

group 'com.theverygroup.fulfilment'

repositories {
    maven {
        url repoUrl
        credentials {
            username repoUsername
            password repoPassword
        }
    }
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

dependencies {
    implementation "io.cucumber:cucumber-java:${cucumberVersion}"
    implementation "io.cucumber:cucumber-core:${cucumberVersion}"
    implementation "io.cucumber:cucumber-junit:${cucumberVersion}"
    implementation "io.cucumber:cucumber-picocontainer:${cucumberVersion}"
    implementation 'org.junit.vintage:junit-vintage-engine:5.9.0'
    implementation 'org.apache.commons:commons-text:1.9'
    implementation 'org.postgresql:postgresql:42.4.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.3'
    implementation 'org.seleniumhq.selenium:selenium-chrome-driver:4.4.0'
    implementation 'org.seleniumhq.selenium:selenium-java:4.4.0'
    implementation 'io.github.bonigarcia:webdrivermanager:5.2.3'
    implementation 'io.rest-assured:rest-assured:4.4.0'
}
configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

def cukeTags = project.properties['tags'] ?: ""
def testEnv = project.properties['env'] ?: ""


task cucumberCLI() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'pretty',
                    '--plugin', 'html:target/Execution-Report.html',
                    '--plugin', 'json:target/Execution-Report.json',
                    '--tags', "${cukeTags}",
                    '--glue', 'com.theverygroup.lf', 'src/test/resources/features']
            environment['TEST_ENV'] = "${testEnv}"
        }
    }
}

test {
    useJUnitPlatform()
}
apply from: 'gradle/dependency-check.gradle'
apply from: 'gradle/dependency-updates.gradle'
apply from: 'gradle/publish.gradle'